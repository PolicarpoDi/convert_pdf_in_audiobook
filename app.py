import asyncio
import os
import tempfile

import streamlit as st
from pydub import AudioSegment

from listening_audio import PDFToAudioConverter

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Conversor de PDF para √Åudio",
    page_icon="üéß",
    layout="wide"
)

# T√≠tulo e descri√ß√£o
st.title("üéß Conversor de PDF para √Åudio")
st.markdown("""
    Converta seus arquivos PDF em audiobooks de alta qualidade.
    Basta fazer upload do arquivo PDF e escolher as configura√ß√µes desejadas.
""")

# Sidebar para configura√ß√µes
with st.sidebar:
    st.header("‚öôÔ∏è Configura√ß√µes")

    # Sele√ß√£o de voz
    voice = st.selectbox(
        "Voz para narra√ß√£o",
        ["pt-BR-FranciscaNeural", "pt-BR-AntonioNeural", "pt-BR-ValerioNeural"],
        index=0
    )

    # Velocidade da fala
    rate = st.slider(
        "Velocidade da fala",
        min_value="-50%",
        max_value="+50%",
        value="+5%",
        step="5%"
    )

    # Tamanho do chunk
    chunk_size = st.slider(
        "Tamanho do chunk",
        min_value=100,
        max_value=500,
        value=300,
        step=50
    )

    # Op√ß√£o de tradu√ß√£o
    translate = st.checkbox("Traduzir para portugu√™s", value=False)

    st.markdown("---")
    st.markdown("""
        ### ‚ÑπÔ∏è Sobre
        Este aplicativo utiliza:
        - Edge TTS para s√≠ntese de voz
        - PyMuPDF para extra√ß√£o de texto
        - Deep Translator para tradu√ß√£o
    """)

# √Årea principal
uploaded_file = st.file_uploader("Escolha um arquivo PDF", type="pdf")

if uploaded_file is not None:
    # Criar diret√≥rio tempor√°rio para o PDF
    with tempfile.NamedTemporaryFile(delete=False, suffix='.pdf') as tmp_file:
        tmp_file.write(uploaded_file.getvalue())
        pdf_path = tmp_file.name

    # Criar diret√≥rio para os √°udios se n√£o existir
    if not os.path.exists("audios"):
        os.makedirs("audios")

    # Nome do arquivo de √°udio
    base_filename = os.path.splitext(uploaded_file.name)[0]
    output_audio = f"audios/{base_filename}.mp3"

    # Bot√£o para converter
    if st.button("üîÑ Converter PDF para √Åudio"):
        try:
            with st.spinner("Processando..."):
                # Criar conversor com as configura√ß√µes selecionadas
                converter = PDFToAudioConverter(
                    voice=voice,
                    rate=rate,
                    chunk_size=chunk_size
                )

                # Processar o PDF
                asyncio.run(converter.process_pdf(
                    pdf_path, translate=translate))

                st.success("‚úÖ Convers√£o conclu√≠da com sucesso!")

                # Verificar se o arquivo de √°udio foi criado
                if os.path.exists(output_audio):
                    # Carregar o √°udio
                    audio = AudioSegment.from_file(output_audio)

                    # Exibir informa√ß√µes do √°udio
                    st.info(f"""
                        üìä Informa√ß√µes do √°udio:
                        - Dura√ß√£o: {len(audio) / 1000:.2f} segundos
                        - Tamanho: {os.path.getsize(output_audio) / 1024:.2f} KB
                    """)

                    # Player de √°udio
                    st.audio(output_audio)

                    # Bot√£o para download
                    with open(output_audio, "rb") as file:
                        st.download_button(
                            label="üì• Download do √°udio",
                            data=file,
                            file_name=f"{base_filename}.mp3",
                            mime="audio/mp3"
                        )
                else:
                    st.error("‚ùå Erro ao gerar o arquivo de √°udio")

        except Exception as e:
            st.error(f"‚ùå Erro durante o processamento: {str(e)}")

        finally:
            # Limpar arquivo tempor√°rio
            try:
                os.unlink(pdf_path)
            except:
                pass

# Footer
st.markdown("---")
st.markdown("""
    <div style='text-align: center'>
        <p>Desenvolvido com ‚ù§Ô∏è por Policarpo</p>
        <p>Licenciado sob GPL-3.0</p>
    </div>
""", unsafe_allow_html=True)
